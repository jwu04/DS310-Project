{
	"name": "Recovery Data Flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQL_Metrics_PQ",
						"type": "DatasetReference"
					},
					"name": "sqlMetricsPQ"
				},
				{
					"dataset": {
						"referenceName": "VM_Metrics_PQ",
						"type": "DatasetReference"
					},
					"name": "vmMetricsPQ"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet2",
						"type": "DatasetReference"
					},
					"name": "Recoveries"
				}
			],
			"transformations": [
				{
					"name": "Select VM"
				},
				{
					"name": "Select SQL"
				},
				{
					"name": "unionRecoveries"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          Updated as date,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Deaths as integer,",
				"          Deaths_Change as integer,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5),",
				"          ISO2 as string,",
				"          ISO3 as string,",
				"          Country_Region as string,",
				"          load_time as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sqlMetricsPQ",
				"source(output(",
				"          ID as integer,",
				"          Updated as date,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Deaths as integer,",
				"          Deaths_Change as integer,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5),",
				"          ISO2 as string,",
				"          ISO3 as string,",
				"          Country_Region as string,",
				"          load_time as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> vmMetricsPQ",
				"vmMetricsPQ select(mapColumn(",
				"          ID,",
				"          Updated,",
				"          Recovered,",
				"          Recovered_Change,",
				"          Country_Region",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select VM",
				"sqlMetricsPQ select(mapColumn(",
				"          ID,",
				"          Updated,",
				"          Recovered,",
				"          Recovered_Change,",
				"          Country_Region",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select SQL",
				"Select SQL, Select VM union(byName: false)~> unionRecoveries",
				"unionRecoveries sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FullDate as date,",
				"          isWeekDay as boolean,",
				"          DayName as string,",
				"          MonthName as string,",
				"          FiscalQuarterName as string",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['recoveries'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Recoveries"
			]
		}
	}
}