{
	"name": "Policy Data Flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Cosmos_Policy_PQ",
						"type": "DatasetReference"
					},
					"name": "policyCosmos",
					"description": "Grabbing Policy from Cosmos Parquet file"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS",
						"type": "DatasetReference"
					},
					"name": "Policies",
					"description": "Putting all of Policy data in Policy collection"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          CountryName as string,",
				"          Date as timestamp,",
				"          C1_School_closing as integer,",
				"          C1_Flag as integer,",
				"          C2_Workplace_closing as integer,",
				"          C2_Flag as integer,",
				"          C3_Cancel_public_events as integer,",
				"          C3_Flag as integer,",
				"          C4_Restrictions_on_gatherings as integer,",
				"          C4_Flag as integer,",
				"          C5_Close_public_transport as integer,",
				"          C5_Flag as integer,",
				"          C6_Stay_at_home_requirements as integer,",
				"          C6_Flag as integer,",
				"          C7_Restrictions_on_internal_movement as integer,",
				"          C7_Flag as integer,",
				"          C8_International_travel_controls as integer,",
				"          H1_Public_information_campaigns as integer,",
				"          H1_Flag as integer,",
				"          H2_Testing_policy as integer,",
				"          H3_Contact_tracing as integer,",
				"          H7_Vaccination_policy as integer,",
				"          H7_Flag as integer,",
				"          H8_Protection_of_elderly_people as integer,",
				"          H8_Flag as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> policyCosmos",
				"policyCosmos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['policies.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Policies"
			]
		}
	}
}