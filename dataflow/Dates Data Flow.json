{
	"name": "Dates Data Flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQL_Dates_PQ",
						"type": "DatasetReference"
					},
					"name": "sqlDatesPQ",
					"description": "grab date data from sql"
				},
				{
					"dataset": {
						"referenceName": "VM_Dates_PQ",
						"type": "DatasetReference"
					},
					"name": "vmDatesPQ",
					"description": "grab date data from vm"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS",
						"type": "DatasetReference"
					},
					"name": "Dates",
					"description": "dump data into dates collection"
				}
			],
			"transformations": [
				{
					"name": "selectDates"
				},
				{
					"name": "unionDates",
					"description": "Combining rows from transformation 'datesfromsql' and 'datesfromvm'"
				},
				{
					"name": "selectDistinctRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DateKey as integer,",
				"          FullDate as date,",
				"          isWeekDay as boolean,",
				"          DayOfWeek as integer,",
				"          DayOfMonth as integer,",
				"          DayOfQuarter as integer,",
				"          DayOfYear as integer,",
				"          DayName as string,",
				"          WeekOfYear as integer,",
				"          WeekName as string,",
				"          MonthOfYear as integer,",
				"          MonthName as string,",
				"          CalendarQuarter as integer,",
				"          CalendarQuarterName as string,",
				"          CalendarYear as integer,",
				"          FiscalMonth as integer,",
				"          FiscalMonthName as string,",
				"          FiscalQuarter as integer,",
				"          FiscalQuarterName as string,",
				"          FiscalYear as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sqlDatesPQ",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> vmDatesPQ",
				"unionDates select(mapColumn(",
				"          FullDate,",
				"          isWeekDay,",
				"          DayName,",
				"          MonthName,",
				"          FiscalQuarterName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDates",
				"sqlDatesPQ, vmDatesPQ union(byName: true)~> unionDates",
				"selectDates aggregate(groupBy(FullDate),",
				"     each(match(name!='FullDate'), $$ = first($$))) ~> selectDistinctRows",
				"selectDistinctRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['dates.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Dates"
			]
		}
	}
}